<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!-- Document will be generated using https://xml2rfc.tools.ietf.org/ -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="the coinche protocol" ipr="trust200902">
 <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN"
    they will automatically be output with "(if approved)" -->

 <!-- ***** FRONT MATTER ***** -->

 <front>
   <!-- The abbreviated title is used in the page header - it is only necessary if the
        full title is longer than 39 characters -->

   <title abbrev="Spider">Coinche protocol</title>

   <!-- add 'role="editor"' below for the editors if appropriate -->

   <!-- Another author who claims to be an editor -->
   <author fullname="Charles Paulet" initials="C.P." role="editor"
           surname="Charles Paulet">
     <organization>Charles Paulet</organization>
     <address>
       <postal>
         <street></street>
         <city>Nantes</city>
         <region></region>
         <code></code>
         <country>France</country>
       </postal>
       <phone>+44 7889 488 335</phone>
       <email>charles.paulet@epitech.eu</email>
     </address>
   </author>

   <date day="14" month="November" year="2017" />

   <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

   <!-- Meta-data Declarations -->

   <area>General</area>

   <workgroup>Interepi Epitech Task Force</workgroup>

   <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->

   <keyword>template</keyword>

   <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

   <abstract>
     <t>This memo defines the Coinche protocol
       Discussion and suggestions for improvement are requested.
       The Coinche protocol has been developped over the last a week at Epitech
       Nantes by the "C'etait pas .net client ?" team.
       Distribution of this memo is unlimited.</t>
     <t>The protocol is a binary-based protocol, with the simplest client
       being any socket program capable of discussing with the servers
       via a socket.</t>
   </abstract>
 </front>

 <middle>
   <section title="Introduction">
     <t>The original specification of the Coinche.</t>

     <section title="A protocol">
      <t>
        Data transfered through socket is binary data. It corresponds to a
        Message object that is serialized via Protobuf.net library. A
        Message corresponds to an operation required by the client to the
        server en vice-versa. Thereby, a Message can be type and such can be
        a CHAT, a CONNECT, a LIST, a PLAYER_PLAY, an AI_PLAY, a, PUTTED or an
        INVENTORY message. A message is constructed as this :

       <list hangIndent="10" style="empty">
         <t>CoincheHeader : type of message</t>
         <t>SourceIdentifier : emitter id</t>
         <t>SourceName : emitter name</t>
         <t>MessageContent : message content</t>
         <t>MessageIndex : numbering</t>
         <t>RelayCount : counting broadcast</t>
       </list>
      </t>
     </section>

     <section title="servers">
       <t>
         The servers forms the backbone of Coinche, providing a point to which
        clients may connect to to play. An account is required to launch a server.
      </t>
     </section>

     <section title="clients">
       <t>
         A client is anything connecting to a server that is not another
         server. Each client is distinguished from other clients by a unique
         id : the source identifier. Clients
         between themselves thanks to the below Spider protocol definition and
         especially via the CHAT message which allows them to chat.
       </t>
     </section>
   </section>

   <section title="Message and derivates">

     <t>
       The protocol as described herein is for use with both client to client
       and client to server connections. Message that are now properly typed
       MUST be dropped.
     </t>

     <section title="CHAT">
       <t>A chat message : its content is displayed to the client/server</t>
     </section>
     <section title="CONNECT">
       <t>A connect event : the contents contains the name of the player that
       want to connect to the server</t>
     </section>
     <section title="LIST">
       <t>A player listing event : client wants to fetch the players list on the
         server. It is return as follows :
       <list hangIndent="10" style="empty">
         <t>[ empty ]</t>
         <t>[ ange ]</t>
         <t>[ belial, cthulu ]</t>
       </list>
       </t>
     </section>
     <section title="PLAYER_PLAY">
       <t>Game init event : a client is ready to play with others</t>
     </section>
     <section title="AI_PLAY">
       <t>Game init event : a client is ready to play vs server</t>
     </section>
     <section title="PUTTED">
       <t>Hand move : a client picked a random card from its deck</t>
     </section>
     <section title="INVENTORY">
       <t>Client Deck event : a client wants to know how many cards is left in its deck</t>
     </section>

   </section>
 </middle>
 <back>


   <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                     v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                     other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                     Modified comments around figure to reflect non-implementation of
                     figure indent control.  Put in reference using anchor="DOMINATION".
                     Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                     added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                     images. Removed meta-characters from comments (causes problems).

v06 2010-04-01 TT     Changed ipr attribute values to latest ones. Changed date to
                     year only, to be consistent with the comments. Updated the 
                     IANA guidelines reference from the I-D to the finished RFC.  -->
 </back>
</rfc>
